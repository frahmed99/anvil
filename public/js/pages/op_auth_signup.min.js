/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!**********************************************!*\
  !*** ./resources/js/pages/op_auth_signup.js ***!
  \**********************************************/
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/*
 *  Document   : op_auth_signup.js
 *  Author     : pixelcave
 *  Description: Custom JS code used in Sign Up Page
 */
// Form Validation, for more examples you can check out https://github.com/jzaefferer/jquery-validation
var pageAuthSignUp = /*#__PURE__*/function () {
  function pageAuthSignUp() {
    _classCallCheck(this, pageAuthSignUp);
  }

  _createClass(pageAuthSignUp, null, [{
    key: "initValidationSignUp",
    value:
    /*
     * Init Sign Up Form Validation
     *
     */
    function initValidationSignUp() {
      // Load default options for jQuery Validation plugin
      Codebase.helpers('jq-validation'); // Init Form Validation

      jQuery(".js-validation-signup").validate({
        rules: {
          first_name: {
            required: true,
            minlength: 3
          },
          last_name: {
            required: true,
            minlength: 3
          },
          email: {
            required: true,
            unique: true,
            email: true
          },
          password: {
            required: true,
            minlength: 8
          },
          password_confirmation: {
            required: true,
            equalTo: "#password"
          },
          "signup-terms": {
            required: true
          }
        },
        messages: {
          first_name: {
            required: "Please enter a First Name",
            minlength: "Your username must consist of at least 3 characters"
          },
          last_name: {
            required: "Please enter a Last Name",
            minlength: "Your username must consist of at least 3 characters"
          },
          email: "Please enter a valid email address",
          password: {
            required: "Please provide a password",
            minlength: "Your password must be at least 8 characters long"
          },
          "password-confirm": {
            required: "Please provide a password",
            minlength: "Your password must be at least 8 characters long",
            equalTo: "Please enter the same password as above"
          },
          "signup-terms": "You must agree to the service terms!"
        }
      });
    }
    /*
     * Init functionality
     *
     */

  }, {
    key: "init",
    value: function init() {
      this.initValidationSignUp();
    }
  }]);

  return pageAuthSignUp;
}(); // Initialize when page loads


Codebase.onLoad(pageAuthSignUp.init());
/******/ })()
;